

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 14 12:28:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0008                     	;# 
   219     0009                     	;# 
   220     000A                     	;# 
   221     000B                     	;# 
   222     000C                     	;# 
   223     000D                     	;# 
   224     000E                     	;# 
   225     000E                     	;# 
   226     000F                     	;# 
   227     0010                     	;# 
   228     0011                     	;# 
   229     0012                     	;# 
   230     0013                     	;# 
   231     0014                     	;# 
   232     0015                     	;# 
   233     0015                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001B                     	;# 
   241     001C                     	;# 
   242     001D                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     0081                     	;# 
   246     0085                     	;# 
   247     0086                     	;# 
   248     0087                     	;# 
   249     0088                     	;# 
   250     0089                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     008E                     	;# 
   254     008F                     	;# 
   255     0090                     	;# 
   256     0091                     	;# 
   257     0092                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009C                     	;# 
   270     009D                     	;# 
   271     009E                     	;# 
   272     009F                     	;# 
   273     0105                     	;# 
   274     0107                     	;# 
   275     0108                     	;# 
   276     0109                     	;# 
   277     010C                     	;# 
   278     010C                     	;# 
   279     010D                     	;# 
   280     010E                     	;# 
   281     010F                     	;# 
   282     0185                     	;# 
   283     0187                     	;# 
   284     0188                     	;# 
   285     0189                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288                           
   289                           	psect	idataCOMMON
   290     0698                     __pidataCOMMON:
   291                           
   292                           ;initializer for _ychannel
   293     0698  3407               	retlw	7
   294                           
   295                           ;initializer for _xchannel
   296     0699  3406               	retlw	6
   297     001E                     _ADRESH	set	30
   298     000C                     _PIR1bits	set	12
   299     001F                     _ADCON0bits	set	31
   300     000B                     _INTCONbits	set	11
   301     0009                     _PORTEbits	set	9
   302     0008                     _PORTDbits	set	8
   303     0008                     _PORTD	set	8
   304     0009                     _PORTE	set	9
   305     0086                     _TRISBbits	set	134
   306     0089                     _TRISEbits	set	137
   307     0085                     _TRISAbits	set	133
   308     009F                     _ADCON1bits	set	159
   309     008C                     _PIE1bits	set	140
   310     0088                     _TRISD	set	136
   311     0089                     _TRISE	set	137
   312     0189                     _ANSELHbits	set	393
   313     0188                     _ANSELbits	set	392
   314     0189                     _ANSELH	set	393
   315     0188                     _ANSEL	set	392
   316                           
   317                           	psect	cinit
   318     07E8                     start_initialization:	
   319                           ; #config settings
   320                           
   321     07E8                     __initialization:
   322                           
   323                           ; Initialize objects allocated to COMMON
   324     07E8  120A  118A  2698  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   325     07ED  00FC               	movwf	__pdataCOMMON& (0+127)
   326     07EE  120A  118A  2699  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   327     07F3  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   328                           
   329                           ; Clear objects allocated to COMMON
   330     07F4  01F0               	clrf	__pbssCOMMON& (0+127)
   331     07F5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   332     07F6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   333     07F7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   334     07F8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   335     07F9  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   336     07FA  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   337     07FB  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   338     07FC                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341     07FC                     __end_of__initialization:
   342     07FC  0183               	clrf	3
   343     07FD  120A  118A  2EED   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMMON
   346     0070                     __pbssCOMMON:
   347     0070                     _datastream:
   348     0070                     	ds	1
   349     0071                     _y:
   350     0071                     	ds	1
   351     0072                     _x:
   352     0072                     	ds	1
   353     0073                     _button:
   354     0073                     	ds	1
   355     0074                     _left:
   356     0074                     	ds	1
   357     0075                     _down:
   358     0075                     	ds	1
   359     0076                     _right:
   360     0076                     	ds	1
   361     0077                     _up:
   362     0077                     	ds	1
   363                           
   364                           	psect	dataCOMMON
   365     007C                     __pdataCOMMON:
   366     007C                     _ychannel:
   367     007C                     	ds	1
   368     007D                     _xchannel:
   369     007D                     	ds	1
   370                           
   371                           	psect	cstackCOMMON
   372     0078                     __pcstackCOMMON:
   373     0078                     ?_adc_setup:
   374     0078                     ??_adc_setup:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0078                     ?_adc_channel:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0078                     ?_adc_RO:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0078                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0078                     ?_adc_read:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0078                     ??_adc_read:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0078                     ?_adc_output:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0078                     ??_adc_output:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0078                     adc_channel@channel:	
   399                           ; 1 bytes @ 0x0
   400                           
   401                           
   402                           ; 2 bytes @ 0x0
   403     0078                     	ds	1
   404     0079                     adc_setup@inter:
   405     0079                     adc_read@channel:	
   406                           ; 1 bytes @ 0x1
   407                           
   408                           
   409                           ; 1 bytes @ 0x1
   410     0079                     	ds	1
   411     007A                     ??_adc_channel:
   412     007A                     ??_adc_RO:	
   413                           ; 1 bytes @ 0x2
   414                           
   415                           
   416                           ; 1 bytes @ 0x2
   417     007A                     	ds	1
   418     007B                     adc_RO@channel:
   419                           
   420                           ; 1 bytes @ 0x3
   421     007B                     	ds	1
   422     007C                     ??_main:
   423                           
   424                           	psect	maintext
   425     06ED                     __pmaintext:	
   426                           ; 1 bytes @ 0x4
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 35 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : B00/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels required when called: 2
   452 ;; This function calls:
   453 ;;		_adc_RO
   454 ;;		_adc_channel
   455 ;;		_adc_setup
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     06ED                     _main:	
   462                           ;psect for function _main
   463                           
   464     06ED                     l841:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;main.c: 37:     TRISE = 0x07;
   470     06ED  3007               	movlw	7
   471     06EE  1683               	bsf	3,5	;RP0=1, select bank1
   472     06EF  1303               	bcf	3,6	;RP1=0, select bank1
   473     06F0  0089               	movwf	9	;volatile
   474     06F1                     l843:
   475                           
   476                           ;main.c: 38:     PORTE = 0;
   477     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   478     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   479     06F3  0189               	clrf	9	;volatile
   480     06F4                     l845:
   481                           
   482                           ;main.c: 39:     TRISD = 0;
   483     06F4  1683               	bsf	3,5	;RP0=1, select bank1
   484     06F5  1303               	bcf	3,6	;RP1=0, select bank1
   485     06F6  0188               	clrf	8	;volatile
   486     06F7                     l847:
   487                           
   488                           ;main.c: 40:     PORTD = 0;
   489     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   490     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   491     06F9  0188               	clrf	8	;volatile
   492     06FA                     l849:
   493                           
   494                           ;main.c: 43:     adc_setup(0);
   495     06FA  3000               	movlw	0
   496     06FB  120A  118A  26C3  120A  118A  	fcall	_adc_setup
   497     0700                     l851:
   498                           
   499                           ;main.c: 44:     adc_channel(xchannel);
   500     0700  3006               	movlw	6
   501     0701  00F8               	movwf	adc_channel@channel
   502     0702  3000               	movlw	0
   503     0703  00F9               	movwf	adc_channel@channel+1
   504     0704  120A  118A  2753  120A  118A  	fcall	_adc_channel
   505     0709                     l853:
   506                           
   507                           ;main.c: 45:     adc_channel(ychannel);
   508     0709  3007               	movlw	7
   509     070A  00F8               	movwf	adc_channel@channel
   510     070B  3000               	movlw	0
   511     070C  00F9               	movwf	adc_channel@channel+1
   512     070D  120A  118A  2753  120A  118A  	fcall	_adc_channel
   513     0712                     l855:
   514                           
   515                           ;main.c: 49:     {;main.c: 50:     x = adc_RO(xchannel);
   516     0712  3006               	movlw	6
   517     0713  120A  118A  26B1  120A  118A  	fcall	_adc_RO
   518     0718  00F2               	movwf	_x
   519     0719                     l857:
   520                           
   521                           ;main.c: 51:     y = adc_RO(ychannel);
   522     0719  3007               	movlw	7
   523     071A  120A  118A  26B1  120A  118A  	fcall	_adc_RO
   524     071F  00F1               	movwf	_y
   525     0720                     l859:
   526                           
   527                           ;main.c: 52:     if (x < 70) PORTDbits.RD7 = 1; else PORTDbits.RD7 = 0;
   528     0720  3046               	movlw	70
   529     0721  0272               	subwf	_x,w
   530     0722  1803               	skipnc
   531     0723  2F25               	goto	u81
   532     0724  2F26               	goto	u80
   533     0725                     u81:
   534     0725  2F2A               	goto	l44
   535     0726                     u80:
   536     0726                     l861:
   537     0726  1283               	bcf	3,5	;RP0=0, select bank0
   538     0727  1303               	bcf	3,6	;RP1=0, select bank0
   539     0728  1788               	bsf	8,7	;volatile
   540     0729  2F2D               	goto	l863
   541     072A                     l44:
   542     072A  1283               	bcf	3,5	;RP0=0, select bank0
   543     072B  1303               	bcf	3,6	;RP1=0, select bank0
   544     072C  1388               	bcf	8,7	;volatile
   545     072D                     l863:
   546                           
   547                           ;main.c: 53:     if (x > 200) PORTDbits.RD6 = 1; else PORTDbits.RD6 = 0;
   548     072D  30C9               	movlw	201
   549     072E  0272               	subwf	_x,w
   550     072F  1C03               	skipc
   551     0730  2F32               	goto	u91
   552     0731  2F33               	goto	u90
   553     0732                     u91:
   554     0732  2F35               	goto	l46
   555     0733                     u90:
   556     0733                     l865:
   557     0733  1708               	bsf	8,6	;volatile
   558     0734  2F36               	goto	l867
   559     0735                     l46:
   560     0735  1308               	bcf	8,6	;volatile
   561     0736                     l867:
   562                           
   563                           ;main.c: 54:     if (y <70) PORTDbits.RD5 = 1; else PORTDbits.RD5 = 0;
   564     0736  3046               	movlw	70
   565     0737  0271               	subwf	_y,w
   566     0738  1803               	skipnc
   567     0739  2F3B               	goto	u101
   568     073A  2F3C               	goto	u100
   569     073B                     u101:
   570     073B  2F3E               	goto	l48
   571     073C                     u100:
   572     073C                     l869:
   573     073C  1688               	bsf	8,5	;volatile
   574     073D  2F3F               	goto	l871
   575     073E                     l48:
   576     073E  1288               	bcf	8,5	;volatile
   577     073F                     l871:
   578                           
   579                           ;main.c: 55:     if (y > 200) PORTDbits.RD4 = 1; else PORTDbits.RD4 = 0;
   580     073F  30C9               	movlw	201
   581     0740  0271               	subwf	_y,w
   582     0741  1C03               	skipc
   583     0742  2F44               	goto	u111
   584     0743  2F45               	goto	u110
   585     0744                     u111:
   586     0744  2F47               	goto	l50
   587     0745                     u110:
   588     0745                     l873:
   589     0745  1608               	bsf	8,4	;volatile
   590     0746  2F48               	goto	l51
   591     0747                     l50:
   592     0747  1208               	bcf	8,4	;volatile
   593     0748                     l51:
   594                           
   595                           ;main.c: 56:     if (PORTEbits.RE0 == 0) PORTDbits.RD3 = 1; else PORTDbits.RD3 = 0;
   596     0748  1809               	btfsc	9,0	;volatile
   597     0749  2F4B               	goto	u121
   598     074A  2F4C               	goto	u120
   599     074B                     u121:
   600     074B  2F4E               	goto	l52
   601     074C                     u120:
   602     074C                     l875:
   603     074C  1588               	bsf	8,3	;volatile
   604     074D  2F12               	goto	l855
   605     074E                     l52:
   606     074E  1188               	bcf	8,3	;volatile
   607     074F  2F12               	goto	l855
   608     0750  120A  118A  2800   	ljmp	start
   609     0753                     __end_of_main:
   610                           
   611                           	psect	text1
   612     06C3                     __ptext1:	
   613 ;; *************** function _adc_setup *****************
   614 ;; Defined at:
   615 ;;		line 16 in file "adc.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  inter           1    wreg     _Bool 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  inter           1    1[COMMON] _Bool 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         1       0       0       0       0
   631 ;;      Temps:          1       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642     06C3                     _adc_setup:	
   643                           ;psect for function _adc_setup
   644                           
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
   648                           ;adc_setup@inter stored from wreg
   649     06C3  00F9               	movwf	adc_setup@inter
   650     06C4                     l729:
   651                           
   652                           ;adc.c: 17:     if (inter == 1) {
   653     06C4  0379               	decf	adc_setup@inter,w
   654     06C5  1D03               	btfss	3,2
   655     06C6  2EC8               	goto	u21
   656     06C7  2EC9               	goto	u20
   657     06C8                     u21:
   658     06C8  2ECF               	goto	l87
   659     06C9                     u20:
   660     06C9                     l731:
   661                           
   662                           ;adc.c: 18:     INTCONbits.GIE = 1;
   663     06C9  178B               	bsf	11,7	;volatile
   664                           
   665                           ;adc.c: 19:     INTCONbits.PEIE = 1;
   666     06CA  170B               	bsf	11,6	;volatile
   667                           
   668                           ;adc.c: 20:     PIE1bits.ADIE = 0;}
   669     06CB  1683               	bsf	3,5	;RP0=1, select bank1
   670     06CC  1303               	bcf	3,6	;RP1=0, select bank1
   671     06CD  130C               	bcf	12,6	;volatile
   672     06CE  2ED2               	goto	l88
   673     06CF                     l87:	
   674                           ;adc.c: 21:     else {
   675                           
   676                           
   677                           ;adc.c: 22:     PIE1bits.ADIE = 0;}
   678     06CF  1683               	bsf	3,5	;RP0=1, select bank1
   679     06D0  1303               	bcf	3,6	;RP1=0, select bank1
   680     06D1  130C               	bcf	12,6	;volatile
   681     06D2                     l88:
   682                           
   683                           ;adc.c: 24:     ADCON1bits.ADFM = 0;
   684     06D2  139F               	bcf	31,7	;volatile
   685                           
   686                           ;adc.c: 25:     ADCON1bits.VCFG0 = 0;
   687     06D3  121F               	bcf	31,4	;volatile
   688                           
   689                           ;adc.c: 26:     ADCON1bits.VCFG1 = 0;
   690     06D4  129F               	bcf	31,5	;volatile
   691     06D5                     l733:
   692                           
   693                           ;adc.c: 28:     ANSEL = 0x00;
   694     06D5  1683               	bsf	3,5	;RP0=1, select bank3
   695     06D6  1703               	bsf	3,6	;RP1=1, select bank3
   696     06D7  0188               	clrf	8	;volatile
   697                           
   698                           ;adc.c: 29:     ANSELH = 0x00;
   699     06D8  0189               	clrf	9	;volatile
   700     06D9                     l735:
   701                           
   702                           ;adc.c: 31:     ADCON0bits.ADCS = 1;
   703     06D9  1283               	bcf	3,5	;RP0=0, select bank0
   704     06DA  1303               	bcf	3,6	;RP1=0, select bank0
   705     06DB  081F               	movf	31,w	;volatile
   706     06DC  393F               	andlw	-193
   707     06DD  3840               	iorlw	64
   708     06DE  009F               	movwf	31	;volatile
   709     06DF                     l737:
   710                           
   711                           ;adc.c: 32:     ADCON0bits.CHS = 0;
   712     06DF  30C3               	movlw	-61
   713     06E0  059F               	andwf	31,f	;volatile
   714     06E1                     l739:
   715                           
   716                           ;adc.c: 33:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   717     06E1  3021               	movlw	33
   718     06E2  00F8               	movwf	??_adc_setup
   719     06E3                     u137:
   720     06E3  0BF8               	decfsz	??_adc_setup,f
   721     06E4  2EE3               	goto	u137
   722     06E5                     l741:
   723                           
   724                           ;adc.c: 34:     ADCON0bits.ADON = 1;
   725     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   726     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   727     06E7  141F               	bsf	31,0	;volatile
   728     06E8                     l743:
   729                           
   730                           ;adc.c: 35:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   731     06E8  3021               	movlw	33
   732     06E9  00F8               	movwf	??_adc_setup
   733     06EA                     u147:
   734     06EA  0BF8               	decfsz	??_adc_setup,f
   735     06EB  2EEA               	goto	u147
   736     06EC                     l89:
   737     06EC  0008               	return
   738     06ED                     __end_of_adc_setup:
   739                           
   740                           	psect	text2
   741     0753                     __ptext2:	
   742 ;; *************** function _adc_channel *****************
   743 ;; Defined at:
   744 ;;		line 41 in file "adc.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  channel         2    0[COMMON] int 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         2       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         2       0       0       0       0
   762 ;;Total ram usage:        2 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     0753                     _adc_channel:	
   772                           ;psect for function _adc_channel
   773                           
   774     0753                     l831:	
   775                           ;incstack = 0
   776                           ; Regs used in _adc_channel: [wreg-fsr0h+status,2+status,0]
   777                           
   778                           
   779                           ;adc.c: 42:     switch (channel)
   780     0753  2FB6               	goto	l835
   781     0754                     l93:	
   782                           ;adc.c: 43:     {case 0:
   783                           
   784                           
   785                           ;adc.c: 44:         ANSELbits.ANS0 = 1;
   786     0754  1683               	bsf	3,5	;RP0=1, select bank3
   787     0755  1703               	bsf	3,6	;RP1=1, select bank3
   788     0756  1408               	bsf	8,0	;volatile
   789                           
   790                           ;adc.c: 45:         TRISAbits.TRISA0 = 1;
   791     0757  1683               	bsf	3,5	;RP0=1, select bank1
   792     0758  1303               	bcf	3,6	;RP1=0, select bank1
   793     0759  1405               	bsf	5,0	;volatile
   794                           
   795                           ;adc.c: 46:         break;
   796     075A  2FE7               	goto	l109
   797     075B                     l95:	
   798                           ;adc.c: 47:     case 1:
   799                           
   800                           
   801                           ;adc.c: 48:         ANSELbits.ANS1 = 1;
   802     075B  1683               	bsf	3,5	;RP0=1, select bank3
   803     075C  1703               	bsf	3,6	;RP1=1, select bank3
   804     075D  1488               	bsf	8,1	;volatile
   805                           
   806                           ;adc.c: 49:         TRISAbits.TRISA1 = 1;
   807     075E  1683               	bsf	3,5	;RP0=1, select bank1
   808     075F  1303               	bcf	3,6	;RP1=0, select bank1
   809     0760  1485               	bsf	5,1	;volatile
   810                           
   811                           ;adc.c: 50:         break;
   812     0761  2FE7               	goto	l109
   813     0762                     l96:	
   814                           ;adc.c: 51:     case 2:
   815                           
   816                           
   817                           ;adc.c: 52:         ANSELbits.ANS2 = 1;
   818     0762  1683               	bsf	3,5	;RP0=1, select bank3
   819     0763  1703               	bsf	3,6	;RP1=1, select bank3
   820     0764  1508               	bsf	8,2	;volatile
   821                           
   822                           ;adc.c: 53:         TRISAbits.TRISA2 = 1;
   823     0765  1683               	bsf	3,5	;RP0=1, select bank1
   824     0766  1303               	bcf	3,6	;RP1=0, select bank1
   825     0767  1505               	bsf	5,2	;volatile
   826                           
   827                           ;adc.c: 54:         break;
   828     0768  2FE7               	goto	l109
   829     0769                     l97:	
   830                           ;adc.c: 55:     case 3:
   831                           
   832                           
   833                           ;adc.c: 56:         ANSELbits.ANS3 = 1;
   834     0769  1683               	bsf	3,5	;RP0=1, select bank3
   835     076A  1703               	bsf	3,6	;RP1=1, select bank3
   836     076B  1588               	bsf	8,3	;volatile
   837                           
   838                           ;adc.c: 57:         TRISAbits.TRISA3 = 1;
   839     076C  1683               	bsf	3,5	;RP0=1, select bank1
   840     076D  1303               	bcf	3,6	;RP1=0, select bank1
   841     076E  1585               	bsf	5,3	;volatile
   842                           
   843                           ;adc.c: 58:         break;
   844     076F  2FE7               	goto	l109
   845     0770                     l98:	
   846                           ;adc.c: 59:     case 4:
   847                           
   848                           
   849                           ;adc.c: 60:         ANSELbits.ANS4 = 1;
   850     0770  1683               	bsf	3,5	;RP0=1, select bank3
   851     0771  1703               	bsf	3,6	;RP1=1, select bank3
   852     0772  1608               	bsf	8,4	;volatile
   853                           
   854                           ;adc.c: 61:         TRISAbits.TRISA5 = 1;
   855     0773  1683               	bsf	3,5	;RP0=1, select bank1
   856     0774  1303               	bcf	3,6	;RP1=0, select bank1
   857     0775  1685               	bsf	5,5	;volatile
   858                           
   859                           ;adc.c: 62:         break;
   860     0776  2FE7               	goto	l109
   861     0777                     l99:	
   862                           ;adc.c: 63:     case 5:
   863                           
   864                           
   865                           ;adc.c: 64:         ANSELbits.ANS5 = 1;
   866     0777  1683               	bsf	3,5	;RP0=1, select bank3
   867     0778  1703               	bsf	3,6	;RP1=1, select bank3
   868     0779  1688               	bsf	8,5	;volatile
   869                           
   870                           ;adc.c: 65:         TRISEbits.TRISE0 = 1;
   871     077A  1683               	bsf	3,5	;RP0=1, select bank1
   872     077B  1303               	bcf	3,6	;RP1=0, select bank1
   873     077C  1409               	bsf	9,0	;volatile
   874                           
   875                           ;adc.c: 66:         break;
   876     077D  2FE7               	goto	l109
   877     077E                     l100:	
   878                           ;adc.c: 67:     case 6:
   879                           
   880                           
   881                           ;adc.c: 68:         ANSELbits.ANS6 = 1;
   882     077E  1683               	bsf	3,5	;RP0=1, select bank3
   883     077F  1703               	bsf	3,6	;RP1=1, select bank3
   884     0780  1708               	bsf	8,6	;volatile
   885                           
   886                           ;adc.c: 69:         TRISEbits.TRISE1 = 1;
   887     0781  1683               	bsf	3,5	;RP0=1, select bank1
   888     0782  1303               	bcf	3,6	;RP1=0, select bank1
   889     0783  1489               	bsf	9,1	;volatile
   890                           
   891                           ;adc.c: 70:         break;
   892     0784  2FE7               	goto	l109
   893     0785                     l101:	
   894                           ;adc.c: 71:     case 7:
   895                           
   896                           
   897                           ;adc.c: 72:         ANSELbits.ANS7 = 1;
   898     0785  1683               	bsf	3,5	;RP0=1, select bank3
   899     0786  1703               	bsf	3,6	;RP1=1, select bank3
   900     0787  1788               	bsf	8,7	;volatile
   901                           
   902                           ;adc.c: 73:         TRISEbits.TRISE2 = 1;
   903     0788  1683               	bsf	3,5	;RP0=1, select bank1
   904     0789  1303               	bcf	3,6	;RP1=0, select bank1
   905     078A  1509               	bsf	9,2	;volatile
   906                           
   907                           ;adc.c: 74:         break;
   908     078B  2FE7               	goto	l109
   909     078C                     l102:	
   910                           ;adc.c: 75:     case 8:
   911                           
   912                           
   913                           ;adc.c: 76:         ANSELHbits.ANS8 = 1;
   914     078C  1683               	bsf	3,5	;RP0=1, select bank3
   915     078D  1703               	bsf	3,6	;RP1=1, select bank3
   916     078E  1409               	bsf	9,0	;volatile
   917                           
   918                           ;adc.c: 77:         TRISBbits.TRISB2 = 1;
   919     078F  1683               	bsf	3,5	;RP0=1, select bank1
   920     0790  1303               	bcf	3,6	;RP1=0, select bank1
   921     0791  1506               	bsf	6,2	;volatile
   922                           
   923                           ;adc.c: 78:         break;
   924     0792  2FE7               	goto	l109
   925     0793                     l103:	
   926                           ;adc.c: 79:     case 9:
   927                           
   928                           
   929                           ;adc.c: 80:         ANSELHbits.ANS9 = 1;
   930     0793  1683               	bsf	3,5	;RP0=1, select bank3
   931     0794  1703               	bsf	3,6	;RP1=1, select bank3
   932     0795  1489               	bsf	9,1	;volatile
   933                           
   934                           ;adc.c: 81:         TRISBbits.TRISB3 = 1;
   935     0796  1683               	bsf	3,5	;RP0=1, select bank1
   936     0797  1303               	bcf	3,6	;RP1=0, select bank1
   937     0798  1586               	bsf	6,3	;volatile
   938                           
   939                           ;adc.c: 82:         break;
   940     0799  2FE7               	goto	l109
   941     079A                     l104:	
   942                           ;adc.c: 83:     case 10:
   943                           
   944                           
   945                           ;adc.c: 84:         ANSELHbits.ANS10 = 1;
   946     079A  1683               	bsf	3,5	;RP0=1, select bank3
   947     079B  1703               	bsf	3,6	;RP1=1, select bank3
   948     079C  1509               	bsf	9,2	;volatile
   949                           
   950                           ;adc.c: 85:         TRISBbits.TRISB1 = 1;
   951     079D  1683               	bsf	3,5	;RP0=1, select bank1
   952     079E  1303               	bcf	3,6	;RP1=0, select bank1
   953     079F  1486               	bsf	6,1	;volatile
   954                           
   955                           ;adc.c: 86:         break;
   956     07A0  2FE7               	goto	l109
   957     07A1                     l105:	
   958                           ;adc.c: 87:     case 11:
   959                           
   960                           
   961                           ;adc.c: 88:         ANSELHbits.ANS11 = 1;
   962     07A1  1683               	bsf	3,5	;RP0=1, select bank3
   963     07A2  1703               	bsf	3,6	;RP1=1, select bank3
   964     07A3  1589               	bsf	9,3	;volatile
   965                           
   966                           ;adc.c: 89:         TRISBbits.TRISB4 = 1;
   967     07A4  1683               	bsf	3,5	;RP0=1, select bank1
   968     07A5  1303               	bcf	3,6	;RP1=0, select bank1
   969     07A6  1606               	bsf	6,4	;volatile
   970                           
   971                           ;adc.c: 90:         break;
   972     07A7  2FE7               	goto	l109
   973     07A8                     l106:	
   974                           ;adc.c: 91:     case 12:
   975                           
   976                           
   977                           ;adc.c: 92:         ANSELHbits.ANS12 = 1;
   978     07A8  1683               	bsf	3,5	;RP0=1, select bank3
   979     07A9  1703               	bsf	3,6	;RP1=1, select bank3
   980     07AA  1609               	bsf	9,4	;volatile
   981                           
   982                           ;adc.c: 93:         TRISBbits.TRISB0 = 1;
   983     07AB  1683               	bsf	3,5	;RP0=1, select bank1
   984     07AC  1303               	bcf	3,6	;RP1=0, select bank1
   985     07AD  1406               	bsf	6,0	;volatile
   986                           
   987                           ;adc.c: 94:         break;
   988     07AE  2FE7               	goto	l109
   989     07AF                     l107:	
   990                           ;adc.c: 95:     case 13:
   991                           
   992                           
   993                           ;adc.c: 96:         ANSELHbits.ANS13 = 1;
   994     07AF  1683               	bsf	3,5	;RP0=1, select bank3
   995     07B0  1703               	bsf	3,6	;RP1=1, select bank3
   996     07B1  1689               	bsf	9,5	;volatile
   997                           
   998                           ;adc.c: 97:         TRISBbits.TRISB5 = 1;
   999     07B2  1683               	bsf	3,5	;RP0=1, select bank1
  1000     07B3  1303               	bcf	3,6	;RP1=0, select bank1
  1001     07B4  1686               	bsf	6,5	;volatile
  1002                           
  1003                           ;adc.c: 98:         break;
  1004     07B5  2FE7               	goto	l109
  1005     07B6                     l835:
  1006                           
  1007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 1, Range of values is 0 to 0
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            4     3 (average)
  1013                           ; direct_byte           11     8 (fixed)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016     07B6  0879               	movf	adc_channel@channel+1,w
  1017     07B7  3A00               	xorlw	0	; case 0
  1018     07B8  1903               	skipnz
  1019     07B9  2FBB               	goto	l897
  1020     07BA  2FE7               	goto	l109
  1021     07BB                     l897:
  1022                           
  1023                           ; Switch size 1, requested type "simple"
  1024                           ; Number of cases is 14, Range of values is 0 to 13
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte           43    22 (average)
  1028                           ; direct_byte           50     8 (fixed)
  1029                           ; jumptable            260     6 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031     07BB  0878               	movf	adc_channel@channel,w
  1032     07BC  3A00               	xorlw	0	; case 0
  1033     07BD  1903               	skipnz
  1034     07BE  2F54               	goto	l93
  1035     07BF  3A01               	xorlw	1	; case 1
  1036     07C0  1903               	skipnz
  1037     07C1  2F5B               	goto	l95
  1038     07C2  3A03               	xorlw	3	; case 2
  1039     07C3  1903               	skipnz
  1040     07C4  2F62               	goto	l96
  1041     07C5  3A01               	xorlw	1	; case 3
  1042     07C6  1903               	skipnz
  1043     07C7  2F69               	goto	l97
  1044     07C8  3A07               	xorlw	7	; case 4
  1045     07C9  1903               	skipnz
  1046     07CA  2F70               	goto	l98
  1047     07CB  3A01               	xorlw	1	; case 5
  1048     07CC  1903               	skipnz
  1049     07CD  2F77               	goto	l99
  1050     07CE  3A03               	xorlw	3	; case 6
  1051     07CF  1903               	skipnz
  1052     07D0  2F7E               	goto	l100
  1053     07D1  3A01               	xorlw	1	; case 7
  1054     07D2  1903               	skipnz
  1055     07D3  2F85               	goto	l101
  1056     07D4  3A0F               	xorlw	15	; case 8
  1057     07D5  1903               	skipnz
  1058     07D6  2F8C               	goto	l102
  1059     07D7  3A01               	xorlw	1	; case 9
  1060     07D8  1903               	skipnz
  1061     07D9  2F93               	goto	l103
  1062     07DA  3A03               	xorlw	3	; case 10
  1063     07DB  1903               	skipnz
  1064     07DC  2F9A               	goto	l104
  1065     07DD  3A01               	xorlw	1	; case 11
  1066     07DE  1903               	skipnz
  1067     07DF  2FA1               	goto	l105
  1068     07E0  3A07               	xorlw	7	; case 12
  1069     07E1  1903               	skipnz
  1070     07E2  2FA8               	goto	l106
  1071     07E3  3A01               	xorlw	1	; case 13
  1072     07E4  1903               	skipnz
  1073     07E5  2FAF               	goto	l107
  1074     07E6  2FE7               	goto	l109
  1075     07E7                     l109:
  1076     07E7  0008               	return
  1077     07E8                     __end_of_adc_channel:
  1078                           
  1079                           	psect	text3
  1080     06B1                     __ptext3:	
  1081 ;; *************** function _adc_RO *****************
  1082 ;; Defined at:
  1083 ;;		line 119 in file "adc.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  channel         1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  channel         1    3[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      unsigned char 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0
  1099 ;;      Temps:          1       0       0       0       0
  1100 ;;      Totals:         2       0       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 1
  1104 ;; This function calls:
  1105 ;;		_adc_output
  1106 ;;		_adc_read
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;;		_adc_volt
  1110 ;;		_adc_mv
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     06B1                     _adc_RO:	
  1115                           ;psect for function _adc_RO
  1116                           
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in _adc_RO: [wreg+status,2+status,0+pclath+cstack]
  1120                           ;adc_RO@channel stored from wreg
  1121     06B1  00FB               	movwf	adc_RO@channel
  1122     06B2                     l755:
  1123                           
  1124                           ;adc.c: 120:     adc_read(channel);
  1125     06B2  087B               	movf	adc_RO@channel,w
  1126     06B3  120A  118A  26A3  120A  118A  	fcall	_adc_read
  1127     06B8                     l757:
  1128                           
  1129                           ;adc.c: 121:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1130     06B8  3010               	movlw	16
  1131     06B9  00FA               	movwf	??_adc_RO
  1132     06BA                     u157:
  1133     06BA  0BFA               	decfsz	??_adc_RO,f
  1134     06BB  2EBA               	goto	u157
  1135     06BC  0000               	nop
  1136     06BD                     l759:
  1137                           
  1138                           ;adc.c: 122:     return adc_output();
  1139     06BD  120A  118A  269A  120A  118A  	fcall	_adc_output
  1140     06C2                     l119:
  1141     06C2  0008               	return
  1142     06C3                     __end_of_adc_RO:
  1143                           
  1144                           	psect	text4
  1145     06A3                     __ptext4:	
  1146 ;; *************** function _adc_read *****************
  1147 ;; Defined at:
  1148 ;;		line 105 in file "adc.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  channel         1    wreg     unsigned char 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  channel         1    1[COMMON] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         1       0       0       0       0
  1164 ;;      Temps:          1       0       0       0       0
  1165 ;;      Totals:         2       0       0       0       0
  1166 ;;Total ram usage:        2 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_adc_RO
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175     06A3                     _adc_read:	
  1176                           ;psect for function _adc_read
  1177                           
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  1181                           ;adc_read@channel stored from wreg
  1182     06A3  00F9               	movwf	adc_read@channel
  1183     06A4                     l717:
  1184                           
  1185                           ;adc.c: 106:     ADCON0bits.CHS = channel;
  1186     06A4  0879               	movf	adc_read@channel,w
  1187     06A5  00F8               	movwf	??_adc_read
  1188     06A6  0DF8               	rlf	??_adc_read,f
  1189     06A7  0DF8               	rlf	??_adc_read,f
  1190     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1191     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1192     06AA  081F               	movf	31,w	;volatile
  1193     06AB  0678               	xorwf	??_adc_read,w
  1194     06AC  39C3               	andlw	-61
  1195     06AD  0678               	xorwf	??_adc_read,w
  1196     06AE  009F               	movwf	31	;volatile
  1197     06AF                     l719:
  1198                           
  1199                           ;adc.c: 107:     ADCON0bits.GO = 1;
  1200     06AF  149F               	bsf	31,1	;volatile
  1201     06B0                     l112:
  1202     06B0  0008               	return
  1203     06B1                     __end_of_adc_read:
  1204                           
  1205                           	psect	text5
  1206     069A                     __ptext5:	
  1207 ;; *************** function _adc_output *****************
  1208 ;; Defined at:
  1209 ;;		line 112 in file "adc.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      unsigned char 
  1216 ;; Registers used:
  1217 ;;		wreg
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_adc_RO
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236     069A                     _adc_output:	
  1237                           ;psect for function _adc_output
  1238                           
  1239     069A                     l721:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _adc_output: [wreg]
  1242                           
  1243                           
  1244                           ;adc.c: 113:     if (PIR1bits.ADIF == 1) {
  1245     069A  1283               	bcf	3,5	;RP0=0, select bank0
  1246     069B  1303               	bcf	3,6	;RP1=0, select bank0
  1247     069C  1F0C               	btfss	12,6	;volatile
  1248     069D  2E9F               	goto	u11
  1249     069E  2EA0               	goto	u10
  1250     069F                     u11:
  1251     069F  2EA1               	goto	l725
  1252     06A0                     u10:
  1253     06A0                     l723:
  1254                           
  1255                           ;adc.c: 114:         PIR1bits.ADIF = 0;
  1256     06A0  130C               	bcf	12,6	;volatile
  1257     06A1                     l725:
  1258                           
  1259                           ;adc.c: 116:     return ADRESH;
  1260     06A1  081E               	movf	30,w	;volatile
  1261     06A2                     l116:
  1262     06A2  0008               	return
  1263     06A3                     __end_of_adc_output:
  1264     007E                     btemp	set	126	;btemp
  1265     007E                     wtemp0	set	126
  1266                           
  1267                           	psect	idloc
  1268                           
  1269                           ;Config register IDLOC0 @ 0x2000
  1270                           ;	unspecified, using default values
  1271     2000                     	org	8192
  1272     2000  3FFF               	dw	16383
  1273                           
  1274                           ;Config register IDLOC1 @ 0x2001
  1275                           ;	unspecified, using default values
  1276     2001                     	org	8193
  1277     2001  3FFF               	dw	16383
  1278                           
  1279                           ;Config register IDLOC2 @ 0x2002
  1280                           ;	unspecified, using default values
  1281     2002                     	org	8194
  1282     2002  3FFF               	dw	16383
  1283                           
  1284                           ;Config register IDLOC3 @ 0x2003
  1285                           ;	unspecified, using default values
  1286     2003                     	org	8195
  1287     2003  3FFF               	dw	16383
  1288                           
  1289                           	psect	config
  1290                           
  1291                           ;Config register CONFIG1 @ 0x2007
  1292                           ;	Oscillator Selection bits
  1293                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1294                           ;	Watchdog Timer Enable bit
  1295                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1296                           ;	Power-up Timer Enable bit
  1297                           ;	PWRTE = OFF, PWRT disabled
  1298                           ;	RE3/MCLR pin function select bit
  1299                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1300                           ;	Code Protection bit
  1301                           ;	CP = OFF, Program memory code protection is disabled
  1302                           ;	Data Code Protection bit
  1303                           ;	CPD = OFF, Data memory code protection is disabled
  1304                           ;	Brown Out Reset Selection bits
  1305                           ;	BOREN = OFF, BOR disabled
  1306                           ;	Internal External Switchover bit
  1307                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1308                           ;	Fail-Safe Clock Monitor Enabled bit
  1309                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1310                           ;	Low Voltage Programming Enable bit
  1311                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1312                           ;	In-Circuit Debugger Mode bit
  1313                           ;	DEBUG = 0x1, unprogramme  1314     2007                     	org	8199
  1315     2007  20D4               	dw	8404
  1316                           
  1317                           ;Config register CONFIG2 @ 0x2008
  1318                           ;	Brown-out Reset Selection bit
  1319                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1320                           ;	Flash Program Memory Self Write Enable bits
  1321                           ;	WRT = OFF, Write protection off
  1322     2008                     	org	8200
  1323     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc_RO
    _adc_RO->_adc_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     219
                             _adc_RO
                        _adc_channel
                          _adc_setup
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_channel                                          2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_RO                                               2     2      0      30
                                              2 COMMON     2     2      0
                         _adc_output
                           _adc_read
 ---------------------------------------------------------------------------------
 (2) _adc_read                                             2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _adc_output                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_RO
     _adc_output
     _adc_read
   _adc_channel
   _adc_setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 14 12:28:10 2023

                      _x 0072                        _y 0071                       l50 0747  
                     l51 0748                       l52 074E                       l44 072A  
                     l46 0735                       l48 073E                       l93 0754  
                     l95 075B                       l87 06CF                       l96 0762  
                     l88 06D2                       l97 0769                       l89 06EC  
                     l98 0770                       l99 0777                       u10 06A0  
                     u11 069F                       u20 06C9                       u21 06C8  
                     u80 0726                       u81 0725                       u90 0733  
                     u91 0732                       _up 0077                      l100 077E  
                    l101 0785                      l102 078C                      l103 0793  
                    l112 06B0                      l104 079A                      l105 07A1  
                    l106 07A8                      l107 07AF                      l116 06A2  
                    l109 07E7                      l119 06C2                      l721 069A  
                    l723 06A0                      l731 06C9                      l725 06A1  
                    l717 06A4                      l741 06E5                      l733 06D5  
                    l719 06AF                      l831 0753                      l743 06E8  
                    l735 06D9                      l737 06DF                      l729 06C4  
                    l841 06ED                      l755 06B2                      l835 07B6  
                    l739 06E1                      l851 0700                      l843 06F1  
                    l757 06B8                      l861 0726                      l853 0709  
                    l845 06F4                      l759 06BD                      l871 073F  
                    l863 072D                      l855 0712                      l847 06F7  
                    l873 0745                      l865 0733                      l857 0719  
                    l849 06FA                      l875 074C                      l867 0736  
                    l859 0720                      l869 073C                      l897 07BB  
                    u100 073C                      u101 073B                      u110 0745  
                    u111 0744                      u120 074C                      u121 074B  
                    u137 06E3                      u147 06EA                      u157 06BA  
                   _main 06ED                     _left 0074                     _down 0075  
                   btemp 007E                     start 0000                    ?_main 0078  
                  _ANSEL 0188                    _PORTD 0008                    _PORTE 0009  
                  _TRISD 0088                    _TRISE 0089                    _right 0076  
                  status 0003                    wtemp0 007E          __initialization 07E8  
           __end_of_main 0753                   ??_main 007C                   _ADRESH 001E  
                 _ANSELH 0189         __end_of_adc_read 06B1                   _adc_RO 06B1  
                 _button 0073             __pdataCOMMON 007C            adc_RO@channel 007B  
__end_of__initialization 07FC           __pcstackCOMMON 0078               _adc_output 069A  
             _datastream 0070               __pmaintext 06ED            ??_adc_channel 007A  
                ?_adc_RO 0078                ?_adc_read 0078        __end_of_adc_setup 06ED  
            ?_adc_output 0078                _ANSELbits 0188               ??_adc_read 0078  
                __ptext1 06C3                  __ptext2 0753                  __ptext3 06B1  
                __ptext4 06A3                  __ptext5 069A      __end_of_adc_channel 07E8  
   end_of_initialization 07FC       adc_channel@channel 0078           adc_setup@inter 0079  
              _PORTDbits 0008                _PORTEbits 0009                _TRISAbits 0085  
              _TRISBbits 0086                _TRISEbits 0089              _adc_channel 0753  
         __end_of_adc_RO 06C3            __pidataCOMMON 0698      start_initialization 07E8  
               ??_adc_RO 007A              __pbssCOMMON 0070          adc_read@channel 0079  
              ___latbits 0002                _adc_setup 06C3             ??_adc_output 0078  
             ?_adc_setup 0078       __end_of_adc_output 06A3                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
           ?_adc_channel 0078                 _adc_read 06A3               _ANSELHbits 0189  
            ??_adc_setup 0078                 _xchannel 007D                 _ychannel 007C  
             _INTCONbits 000B  
